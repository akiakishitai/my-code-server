# yaml-language-server: $schema=https://kubernetesjsonschema.dev/v1.14.0-standalone/pod-v1.json
# Generation of Kubernetes YAML is still under development!
#
# Save the output of this file and use kubectl create -f to import
# it into Kubernetes.
#
# Created with podman-3.0.1
apiVersion: v1
kind: Pod
metadata:
  name: my-code-server
  creationTimestamp: "2021-08-21T13:06:28Z"
  labels:
    app: code-server
  annotations:
    code_server_version: "4.6.1"
    vscode_version: "1.70.2"
    base_image: "https://docs.linuxserver.io/images/docker-code-server"
spec:
  containers:
  - image: ghcr.io/linuxserver/code-server:4.6.1
    name: code-server
    env:
    - name: PASSWORD
      valueFrom:
        configMapKeyRef:
          name: code-server-config
          key: password
    - name: TZ
      value: Asia/Tokyo
    - name: PUID
      value: "1000"
    - name: PGID
      value: "1000"
    # Additional init scripts dir
    - name: EXTRA_INIT_DIR
      value: /usr/local/etc/extra-cont-init.d
    # Tools Env
    # Can't expand environment variables in `podman`.
    - name: TOOLS_HOME
      value: /app/local
    - name: GNUPGKEYRINGS
      value: /app/local/keyrings
    - name: VOLTA_HOME
      value: /app/local/volta
    - name: CARGO_HOME
      value: /app/local/cargo
    - name: RUSTUP_HOME
      value: /app/local/rustup
    - name: FLUTTER_HOME
      value: /app/local/flutter
    # Override, add '${TOOLS_HOME}/bin'
    # podman image inspect --format "{{.Config.Env}}" quay.io/linuxserver.io/code-server:4.2.0
    - name: PATH
      value: "\
        /app/local/bin:\
        /app/local/flutter/bin:\
        /app/local/cargo/bin:\
        /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
    ports:
    - containerPort: 8443
      hostPort: 8443
      protocol: TCP
    resources: {}
    securityContext:
      allowPrivilegeEscalation: true
      capabilities:
        drop:
        - CAP_MKNOD
        - CAP_NET_RAW
        - CAP_AUDIT_WRITE
      privileged: false
      readOnlyRootFilesystem: false
      seLinuxOptions: {}
    volumeMounts:
      # Exist and used the '/app/code-server/bin/code-server'
    - mountPath: /app/local
      name: app-data
    - mountPath: /config
      name: config-data
    - mountPath: /usr/local/etc/extra-cont-init.d
      name: s6-init-extra
      readOnly: true
    - mountPath: /etc/cont-init.d/80-load-tools
      name: s6-init-extra-loader
      readOnly: true
    - mountPath: /app/code-server/src/browser/pages/custom-fonts.css
      name: custom-font-css
      readOnly: true
    - mountPath: /app/local/cargo
      name: cargo-home
    workingDir: /
  dnsConfig: {}
  restartPolicy: Never
  volumes:
  # A Kubernetes PersistentVolumeClaim represents a Podman named volume.
  - name: app-data
    persistentVolumeClaim:
      claimName: coder-app
  - name: config-data
    persistentVolumeClaim:
      claimName: coder-config
  - name: s6-init-extra
    hostPath:
      path: contents/extra-cont-init.d
      type: Directory
  - name: s6-init-extra-loader
    hostPath:
      path: contents/cont-init.d/80-load-tools
      type: File
  - name: custom-font-css
    hostPath:
      path: contents/stylesheets/custom-fonts.css
      type: File
  - name: cargo-home
    persistentVolumeClaim:
      claimName: cargo-home
status: {}
